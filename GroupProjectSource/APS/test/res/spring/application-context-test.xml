<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xsi:schemaLocation="http://www.springframework.org/schema/beans
    http://www.springframework.org/schema/beans/spring-beans-3.0.xsd">
    
    <!-- Customer Repository Setup -->
    <bean id="userRepository" class="test.za.ac.wits.elen7045.group3.domain.mock.FakeUserDB"></bean>    
    <bean id="customerReposiory" class="za.ac.wits.elen7045.group3.aps.domain.repository.user.CustomerRepositoryImpl">
       <constructor-arg ref="userRepository"/>
    </bean>
    <!-- Customer Repository -->
    
    <!-- Notificstions Setup -->
    
    <bean id="notificationDataAccess" class="test.za.ac.wits.elen7045.group3.domain.mock.FakeNotificationDB"/>
    <bean id="scrapeLogResultRepository" class="za.ac.wits.elen7045.group3.aps.domain.repository.notification.ScrapeLogResultImpl">
        <constructor-arg ref="notificationDataAccess"/>
    </bean>
    <!-- Notifications Repository -->
    
    <!-- Billing Database Setup -->
    <bean id="billingDataAccess" class="test.za.ac.wits.elen7045.group3.domain.mock.FakeBillingDB"/>
    <bean id="addBillingAccountRepository" class="za.ac.wits.elen7045.group3.aps.domain.accounts.repository.AddBillingAccountRepositoryImpl">
        <constructor-arg ref="billingDataAccess"/>
    </bean> 
    <bean id="retrivebillingAccountRepository" class="za.ac.wits.elen7045.group3.aps.domain.accounts.repository.RetriveBillingAccountRepositoryImpl">
        <constructor-arg ref="billingDataAccess"/>
    </bean>
    
    <!-- Billing Database Setup -->
    
    <!--    statement Setup -->
    <bean id="statementDataAcces" class="test.za.ac.wits.elen7045.group3.domain.mock.FakeBillingStatementDB"/>
    <bean id="saveStatementDataRepository" class="za.ac.wits.elen7045.group3.aps.domain.statement.repository.SaveStatementRepositoryImpl">
       <constructor-arg ref="statementDataAcces"/>
    </bean>
     <bean id="retriveStatementDataRepository" class="za.ac.wits.elen7045.group3.aps.domain.statement.repository.RetriveStatementRepositoryImpl">
       <constructor-arg ref="statementDataAcces"/>
    </bean>
    <!--  statement Setup    -->
    
    <bean id="applicationUser"   class="za.ac.wits.elen7045.group3.aps.services.dto.CustomerDTO"/>
    <bean id="capuredCredentials"   class="za.ac.wits.elen7045.group3.aps.services.dto.CapturedCredentialsDTO">
      <property name="encryptionModule" ref="encryptionModule"></property>
    </bean>
    
    <bean id="paymentDetails"    class="za.ac.wits.elen7045.group3.aps.services.dto.PaymentDetailsDTO"/>   
    <bean id="userCredenials"    class="za.ac.wits.elen7045.group3.aps.services.dto.CredentialsDTO"/> 
    <bean id="billingCompanyDetails"    class="za.ac.wits.elen7045.group3.aps.services.dto.BillingCompanyDTO"/> 
    <bean id="contactDetails"    class="za.ac.wits.elen7045.group3.aps.services.dto.ContactInformationDTO"/> 
    <bean id="notification"      class="za.ac.wits.elen7045.group3.aps.domain.entities.ScrapeLogResult"/>
    <bean id="encryptionModule"  class="za.ac.wits.elen7045.group3.aps.services.security.EncryptionModuleImpl"/>
    
    <!-- Strategy Factory  -->
    <bean id="scrapeStrategyFactory" 	class="za.ac.wits.elen7045.group3.aps.services.scrape.factory.ScraperStrategyFactoryImpl">
	    <constructor-arg ref="addBillingAccountRepository"/>
	    <constructor-arg ref="scrapeLogResultRepository"/>
	    <constructor-arg ref="saveStatementDataRepository"/>
    </bean>
    
     <bean id="billingCompanyRepository"  class="za.ac.wits.elen7045.group3.aps.domain.scheduler.BillingCompanyRepository"/>
    <bean id="schedulingSpecification"  class="za.ac.wits.elen7045.group3.aps.domain.scheduler.SchedulingSpecification"/>
    <bean id="timer"  class="za.ac.wits.elen7045.group3.aps.domain.scheduler.Timer"> 
        <constructor-arg index="0"><value>0/10 * * * * ?</value></constructor-arg>
    </bean>
</beans>

